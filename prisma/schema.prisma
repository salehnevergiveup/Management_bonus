generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}


model UserInvitation {
  id          String    @id @default(uuid())
  token       String    @unique
  user_id     String
  user        User      @relation(fields: [user_id], references: [id], onDelete: Cascade)
  created_at  DateTime  @default(now())
  expires_at  DateTime
  accepted_at DateTime?

  @@index([user_id])
}


model User {
  id          String     @id @default(uuid())
  name        String
  username    String     @unique
  email       String     @unique
  password    String
  phone       String?    @unique
  profile_img String?    @db.LongText
  status      String?    @default("inactive")
  updated_at  DateTime   @updatedAt
  role_id     String
  role        Role       @relation(fields: [role_id], references: [id])
  invitations UserInvitation[]
}

model Role {  
  id          String           @id @default(uuid())  
  name        String           @unique  
  users       User[]  
  permissions RolePermission[] 
}

model Permission {  
  id   String           @id @default(uuid())  
  name String           @unique  
  roles RolePermission[] 
}

model RolePermission {
  role_id       String
  permission_id String
  role          Role        @relation(fields: [role_id], references: [id], onDelete: Cascade)
  permission    Permission  @relation(fields: [permission_id], references: [id], onDelete: Cascade)

  @@id([role_id, permission_id])
}